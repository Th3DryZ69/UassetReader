<?xml version="1.0" encoding="utf-8"?>
<Application x:Class="Uasset_Reader.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Uasset_Reader" ShutdownMode="OnExplicitShutdown" Startup="Application_Startup">
    <Application.Resources>
    <ResourceDictionary>
      <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Grid Name="Grid">
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#00FFFFFF" />
                <Border Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Control.Background}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="FrameworkElement.Tag" Value="Horizontal">
                  <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                  <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#8C8C8C" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="GridRoot" Width="8" Background="{TemplateBinding Control.Background}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="0.00001*" />
                </Grid.RowDefinitions>
                <Track Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                  <Track.Thumb>
                    <Thumb Name="Thumb" Background="{TemplateBinding Control.Foreground}" Style="{DynamicResource ScrollThumbs}" />
                  </Track.Thumb>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                  </Track.IncreaseRepeatButton>
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                  </Track.DecreaseRepeatButton>
                </Track>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                  <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                      <RotateTransform Angle="-90" />
                    </Setter.Value>
                  </Setter>
                  <Setter TargetName="PART_Track" Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                      <RotateTransform Angle="-90" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Width" Value="Auto" />
                  <Setter Property="Height" Value="8" />
                  <Setter TargetName="Thumb" Property="FrameworkElement.Tag" Value="Horizontal" />
                  <Setter TargetName="PageDown" Property="ButtonBase.Command" Value="ScrollBar.PageLeftCommand" />
                  <Setter TargetName="PageUp" Property="ButtonBase.Command" Value="ScrollBar.PageRightCommand" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="Close" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Border.CornerRadius" Value="2" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="40" />
        <Style.Triggers>
          <Trigger Property="UIElement.IsMouseOver" Value="True">
            <Setter Property="Background" Value="#FFFF0000" />
          </Trigger>
          <Trigger Property="UIElement.IsMouseOver" Value="False">
            <Setter Property="Background" Value="#00FFFFFF" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="Control" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Border.CornerRadius" Value="2" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="40" />
        <Style.Triggers>
          <Trigger Property="UIElement.IsMouseOver" Value="True">
            <Setter Property="Background" Value="#0D1118" />
          </Trigger>
          <Trigger Property="UIElement.IsMouseOver" Value="False">
            <Setter Property="Background" Value="#00FFFFFF" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Viewbox Width="{TemplateBinding FrameworkElement.Width}">
                <Grid Width="96">
                  <Grid Width="96" VerticalAlignment="Center" ShowGridLines="False">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="1*" />
                      <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Path Grid.Column="0" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="2" Stretch="Uniform" />
                    <Rectangle Name="BackGround" Grid.Column="0" Grid.ColumnSpan="2" Width="96" Height="52" HorizontalAlignment="Stretch" VerticalAlignment="Center" Panel.ZIndex="0" Fill="{TemplateBinding Control.Background}" RadiusX="26" RadiusY="26" />
                    <Path Grid.Column="1" Height="21" Margin="0,0,2,3" HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="2" Stretch="Uniform" />
                  </Grid>
                  <Ellipse Name="Pill" Width="50" Height="50" Margin="1,0,1,0" HorizontalAlignment="Left" VerticalAlignment="Center" Panel.ZIndex="1" Fill="{TemplateBinding Control.BorderBrush}" Visibility="Visible" />
                </Grid>
              </Viewbox>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                  <Setter TargetName="Pill" Property="HorizontalAlignment" Value="Right" />
                  <Setter TargetName="BackGround" Property="Shape.Fill" Value="#0091E6" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="#D3D3D6" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid Name="grid">
                <Border Name="border" CornerRadius="8" BorderBrush="#050608" BorderThickness="1" Background="#0B0F16" Cursor="Hand">
                  <UIElement.Effect>
                    <DropShadowEffect ShadowDepth="3" Opacity="0.2" />
                  </UIElement.Effect>
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="SemiBold" />
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="#0091E6" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="#454B56" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.25" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SettingBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#0B0F16" />
        <Setter Property="BorderBrush" Value="#050608" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Border.CornerRadius" Value="10" />
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="820" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="3" Opacity="0.2" />
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="#0B0F16" />
        <Setter Property="BorderBrush" Value="#050608" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#D3D3D6" />
        <Setter Property="ToolTipService.Placement" Value="Right" />
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="3" Opacity="0.2" />
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>